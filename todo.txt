https://www.w3.org/TR/SVG/types.html#InterfaceSVGElement
https://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule

Add license https://github.com/regebro/svg.path/blob/master/LICENSE.txt
Add batik license of computing the Arc2D

TODO:
-----
SVGLocatable implementation
SVGSVGElement (might have an abstract implementation to be completed by the LWJGL element)
SVGTextContentElement
CSSValueImplementation (split)
CSSRuleBuilder @font-face, @color-profile (color profile rule in .svg)
CSSProperties
set initial -> default
CSSStyleDeclarationImplementation.getCascadingPropertyCSSValue
	Compute cascading value for relative properties
	ParsingState.findParentRule
Ensure that base elements for relative attributes are set
SVGFontElementParser. 16px -> 1em
Parsing URIs (url(...), local(...))
Referencing fonts and filters
SVGAnimationElement implementation
Graphical event attributes, document event attributes
Check content models (child attributes based on parent: like clip-path), documented properties
Setting values (i.e. glyph) based on font attributes
Parsing the <style>... where?
values, keyTimes, etc. can be null

FUTURE:
-------
Readonly elements/attributes?
Documentation
Validate setting of constants?
For implementations duplicate() should it recurse?
Better adoptNode() implementation
Setting viewport element each layer?
Validate SVG using required features and extensions
Don't support calc()
Parsing JavaScript?

* = work in progress
+ = done
. = not handled

*	1. Implementations
*	2. Parser (Reader)
	3. Renderer
*	4. Writer

R	W
		<svg>
+	+	<g>
+	+	<defs>
+	+	<desc>
+	+	<title>
+	+	<symbol>
+	+	<use>
+	+	<image>
+	+	<switch>
+	+	<style>
+	+	<path>
+	+	<rect>
+	+	<circle>
+	+	<ellipse>
+	+	<line>
+	+	<polyline>
+	+	<polygon>
+	+	<text>
+	+	<tspan>
.	.	<tref>
+	+	<textPath>
+	+	<altGlyph>
+	+	<altGlyphDef>
+	+	<altGlyphItem>
+	+	<glyphRef>
+	+	<marker>
+	+	<color-profile>
+	+	<clipPath>
+	+	<filter>
+	+	<feDistantLight>
+	+	<fePointLight>
+	+	<feSpotLight>
+	+	<feBlend>
+	+	<feColorMatrix>
+	+	<feComponentTransfer>
+	+	<feFuncA>
+	+	<feFuncB>
+	+	<feFuncG>
+	+	<feFuncR>
+	+	<feComposite>
+	+	<feConvolveMatrix>
+	+	<feDiffuseLighting>
+	+	<feDisplacementMap>
+	+	<feFlood>
+	+	<feGaussianBlur>
+	+	<feImage>
+	+	<feMerge>
+	+	<feMorphology>
+	+	<feOffset>
+	+	<feSpecularLighting>
+	+	<feTile>
+	+	<feTurbulence>
+	+	<cursor>
+	+	<a>
+	+	<view>
+	+	<script>
+	+	<animate>
+	+	<set>
+	+	<animateMotion>
+	+	<animateColor>
+	+	<animateTransform>
+	+	<mpath>
+	+	<font>
+	+	<glyph>
+	+	<missing-glyph>
		<hkern>
		<vkern>
+	+	<font-face>
+	+	<font-face-src>
+	+	<font-face-uri>
+	+	<font-face-format>
+	+	<font-face-name>
+	+	<metadata>
+	+	<foreignObject>